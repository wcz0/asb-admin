asb-admin:
  version: 0.0.1

website:
 url: http://localhost:8080
 footer: '2023 asb-admin'
 logo: /logo.png

spring:
  application:
    name: asb-admin
#  profiles:
#    active: dev
  main:
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      enabled: true
    mvc:
      path-matching:
        matching-strategy: ANT_PATH_MATCHER
  jackson:
    locale: zh_CN
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  datasource:
    url: jdbc:mysql://localhost:3306/asb?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimeZone=GMT+8&allowPublicKeyRetrieval=true
    name: asb
    username: root
    password: root
  data:
    redis:
      host: 192.168.50.3
      port: 6379
      password:
      timeout: 30000
      database: 3
      jedis:
        pool:
          max-active: 200
          max-wait: -1
          max-idle: 10
          min-idle: 0
          time-between-eviction-runs: -1

debug: true
logging:
  level:
    com.wcz0.asb: info
    org.springframework.boot: warn
#  config: classpath:logback-spring.xml
#  file:
#      path: ./asb_log
id-generator:
  worker-id: 1
sa-token:
  token-name: Authorization
  timeout: 2592000
  active-timeout: -1
  is-concurrent: true
  is-share: true
  token-style: uuid
  is-log: true
  jwt-secret-key: t768pv1t5qkisahnpxsgyknkbxljns46
  token-prefix: Bearer


springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /api-docs
knife4j:
  enable: true
  setting:
    language: zh_cn

casbin:
  #Whether to enable Casbin, it is enabled by default.
  enableCasbin: true
  #Whether to use thread-synchronized Enforcer, default false
  useSyncedEnforcer: false
  #Whether to enable automatic policy saving, if the adapter supports this function, it is enabled by default.
  autoSave: true
  #Storage type [file, jdbc], currently supported jdbc database [mysql (mariadb), h2, oracle, postgresql, db2]
  #Welcome to write and submit the jdbc adapter you are using, see: org.casbin.adapter.OracleAdapter
  #The jdbc adapter will actively look for the data source information you configured in spring.datasource
  #Default use jdbc, and use the built-in h2 database for memory storage
  storeType: jdbc
  #Customized policy table name when use jdbc, casbin_rule as default.
  tableName: casbin_rule
  #Data source initialization policy [create (automatically create data table, no longer initialized if created), never (always do not initialize)]
  initializeSchema: create
  #Local model configuration file address, the default reading location: classpath: casbin/model.conf
  model: classpath:casbin/model.conf
  #If the model configuration file is not found in the default location and casbin.model is not set correctly, the built-in default rbac model is used, which takes effect by default.
  useDefaultModelIfModelNotSetting: true
  #Local policy configuration file address, the default reading location: classpath: casbin/policy.csv
  #If the configuration file is not found in the default location, an exception will be thrown.
  #This configuration item takes effect only when casbin.storeType is set to file.
  policy: classpath:casbin/policy.csv
  #Whether to enable the CasbinWatcher mechanism, the default is not enabled.
  #If the mechanism is enabled, casbin.storeType must be jdbc, otherwise the configuration is invalid.
  enableWatcher: true
  #CasbinWatcher notification mode, defaults to use Redis for notification synchronization, temporarily only supports Redis
  #After opening Watcher, you need to manually add spring-boot-starter-data-redis dependency.
  watcherType: redis
  exception:
    ... See Schedule A for exception settings.